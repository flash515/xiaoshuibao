//日期格式化
//用法：{{tools.formatTime(item.PublishDate,'yyyy-MM-dd')}}
var formatTime = function (strDate, format = "yyyy-MM-dd hh:mm:ss") {
  // 解决ios出现NaN问题
  var realDate = strDate ? getDate(strDate.replace(getRegExp('-', 'g'), '/')) : getDate();
  var regYear = getRegExp("(y+)", "i");
  var date = [
   ["M+", realDate.getMonth() + 1],
   ["d+", realDate.getDate()],
   ["h+", realDate.getHours()],
   ["m+", realDate.getMinutes()],
   ["s+", realDate.getSeconds()],
   ["q+", Math.floor((realDate.getMonth() + 3) / 3)],
   ["S+", realDate.getMilliseconds()],
  ];
  var reg1 = regYear.exec(format);
  if (reg1) {
   format = format.replace(reg1[1], (realDate.getFullYear() + '').substring(4 - reg1[1].length));
  }
  for (var i = 0; i < date.length; i++) {
   var reg2 = getRegExp("(" + date[i][0] + ")").exec(format);
   if (reg2) {
    format = format.replace(reg2[1], reg2[1].length == 1 ? v : ("00" + date[i][1]).substring(("" + date[i][1]).length));
   }
  }
  return format;
 }

// 从时间值中仅提取日期，不改变原来的格式
//用法注意要加[]：{{tools.subDate([item.PublishDate])}}
var subDate = function (val) {
  if (val.length == 0 || val == undefined || "") {
    return;
  }  else {
  // if (val.length > 0) {
    console.log(val)
    console.log("执行了")

    // var date = val.toDateString()
    var date = getDate(val).toString().substring(0, 11)
    return date;
  }
}

var formatNumber = function (n) {
  n = n.toString()
  return n[1] ? n : '0' + n
}

var regYear = getRegExp("(y+)", "i");

//时间戳转格式
var dateFormat = function (timestamp, format) {
  if (!format) {
    format = "yyyy-MM-dd hh:mm:ss";
  }
  timestamp = parseInt(timestamp);
  // 通过getDate()方法获取date类型的时间
  var realDate = getDate(timestamp);
  function timeFormat(num) {
    return num < 10 ? '0' + num : num;
  }
  var date = [
    ["M+", timeFormat(realDate.getMonth() + 1)],
    ["d+", timeFormat(realDate.getDate())],
    ["h+", timeFormat(realDate.getHours())],
    ["m+", timeFormat(realDate.getMinutes())],
    ["s+", timeFormat(realDate.getSeconds())],
    ["q+", Math.floor((realDate.getMonth() + 3) / 3)],
    ["S+", realDate.getMilliseconds()],
  ];
  var reg1 = regYear.exec(format);
  // console.log(reg1[0]);
  if (reg1) {

    format = format.replace(reg1[1], (realDate.getFullYear() + '').substring(4 - reg1[1].length));
  }
  for (var i = 0; i < date.length; i++) {
    var k = date[i][0];
    var v = date[i][1];
    // getRegExp初始化一个正则表达式对象
    var reg2 = getRegExp("(" + k + ")").exec(format);
    if (reg2) {
      format = format.replace(reg2[1], reg2[1].length == 1
        ? v : ("00" + v).substring(("" + v).length));
    }
  }
  return format;
}
// 截取后四位,注意要先单独转换成string，否则str.length不起作用，substr在wxs中使用无效
var subNum = function (val) {
  if (val.length == 0 || val == undefined || "") {
    return;
  }
  if (val.length > 0) {
    var str=val.toString()
    var last = str.substring(str.length-4, str.length)
    return last;
  }
}
// 把object转成string
var ObjToStr = function (val) {
  var myJSON = JSON.stringify(val);
  return myJSON
}
module.exports.formatTime=formatTime;
module.exports.dateFormat = dateFormat;
module.exports.subDate = subDate;
module.exports.subNum = subNum;
module.exports.ObjToStr = ObjToStr;